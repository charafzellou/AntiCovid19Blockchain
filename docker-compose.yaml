version: '3'
services:
  database:
    image: 'mongo:latest'
    container_name: "mongodb"
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: anticovid
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_DATA_DIR: '/data/db'
    volumes:
      - './db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro'
  mongo-express:
    image: 'mongo-express:latest'
    container_name: "mongoexpress"
    depends_on:
      - 'database'
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb # Container name
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'false'
      ME_CONFIG_MONGODB_AUTH_DATABASE: anticovid
      ME_CONFIG_MONGODB_AUTH_USERNAME: root
      ME_CONFIG_MONGODB_AUTH_PASSWORD: password
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: password
  apireact:
    image: 'node:10-alpine'
    container_name: "apireact"
    depends_on:
      - 'database'
    volumes:
      - './server:/usr/src/app'
    working_dir: '/usr/src/app'
    ports:
      - '3000:3000'
    command: "npm start"
  webreact:
    image: 'node:10-alpine'
    container_name: "webreact"
    depends_on:
      - 'apireact'
    volumes:
      - './client:/usr/src/app'
    working_dir: '/usr/src/app'
    ports:
      - '8686:8686'
    command: "npm start"
  ganache-cli:
    image: 'trufflesuite/ganache-cli:latest'
    ports:
      - '8545:8545'
    volumes:
      - './ganache:/ganache_data'
    entrypoint:
      - node
      - ./build/cli.node.js
      - --deterministic
      - --db=/ganache_data
      - --mnemonic
      - 'minimum symptom minute gloom tragic situate silver mechanic salad amused elite beef'
      - --networkId
      - '5777'
      - --hostname
      - '0.0.0.0'
      - --debug
    # ENTRYPOINT ["node", "./build/cli.node.js"]